// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace Todo.Models
{
    /// <summary> Enum for status in TodoItem. </summary>
    public readonly partial struct TodoItemStatus : IEquatable<TodoItemStatus>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="TodoItemStatus"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public TodoItemStatus(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string NotStartedValue = "NotStarted";
        private const string InProgressValue = "InProgress";
        private const string CompletedValue = "Completed";

        /// <summary> NotStarted. </summary>
        public static TodoItemStatus NotStarted { get; } = new TodoItemStatus(NotStartedValue);
        /// <summary> InProgress. </summary>
        public static TodoItemStatus InProgress { get; } = new TodoItemStatus(InProgressValue);
        /// <summary> Completed. </summary>
        public static TodoItemStatus Completed { get; } = new TodoItemStatus(CompletedValue);
        /// <summary> Determines if two <see cref="TodoItemStatus"/> values are the same. </summary>
        public static bool operator ==(TodoItemStatus left, TodoItemStatus right) => left.Equals(right);
        /// <summary> Determines if two <see cref="TodoItemStatus"/> values are not the same. </summary>
        public static bool operator !=(TodoItemStatus left, TodoItemStatus right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="TodoItemStatus"/>. </summary>
        public static implicit operator TodoItemStatus(string value) => new TodoItemStatus(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is TodoItemStatus other && Equals(other);
        /// <inheritdoc />
        public bool Equals(TodoItemStatus other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
