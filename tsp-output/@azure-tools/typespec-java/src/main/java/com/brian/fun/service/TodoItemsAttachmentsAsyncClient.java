// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.brian.fun.service;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;
import com.azure.core.util.FluxUtil;
import com.azure.core.util.serializer.TypeReference;
import com.brian.fun.service.implementation.MultipartFormDataHelper;
import com.brian.fun.service.implementation.TodoItemsAttachmentsImpl;
import com.brian.fun.service.implementation.models.CreateFileAttachmentRequest;
import com.brian.fun.service.implementation.models.CreateUrlAttachmentRequest;
import com.brian.fun.service.models.ContentsFileDetails;
import com.brian.fun.service.models.TodoUrlAttachment;
import java.util.List;
import reactor.core.publisher.Mono;

/**
 * Initializes a new instance of the asynchronous TodoClient type.
 */
@ServiceClient(builder = TodoClientBuilder.class, isAsync = true)
public final class TodoItemsAttachmentsAsyncClient {
    @Generated
    private final TodoItemsAttachmentsImpl serviceClient;

    /**
     * Initializes an instance of TodoItemsAttachmentsAsyncClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    TodoItemsAttachmentsAsyncClient(TodoItemsAttachmentsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * The list operation.
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * [
     *     BinaryData (Required)
     * ]
     * }</pre>
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<BinaryData>> listWithResponse(long itemId, RequestOptions requestOptions) {
        return this.serviceClient.listWithResponseAsync(itemId, requestOptions);
    }

    /**
     * The createUrlAttachment operation.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     contents (Required): {
     *         description: String (Required)
     *         url: String (Required)
     *     }
     * }
     * }</pre>
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @param request The request parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> createUrlAttachmentWithResponse(long itemId, BinaryData request,
        RequestOptions requestOptions) {
        return this.serviceClient.createUrlAttachmentWithResponseAsync(itemId, request, requestOptions);
    }

    /**
     * The createFileAttachment operation.
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @param request The request parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    Mono<Response<Void>> createFileAttachmentWithResponse(long itemId, BinaryData request,
        RequestOptions requestOptions) {
        // Protocol API requires serialization of parts with content-disposition and data, as operation
        // 'createFileAttachment' is 'multipart/form-data'
        return this.serviceClient.createFileAttachmentWithResponseAsync(itemId, request, requestOptions);
    }

    /**
     * The list operation.
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response body on successful completion of {@link Mono}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<List<BinaryData>> list(long itemId) {
        // Generated convenience method for listWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return listWithResponse(itemId, requestOptions).flatMap(FluxUtil::toMono)
            .map(protocolMethodData -> protocolMethodData.toObject(TYPE_REFERENCE_LIST_BINARY_DATA));
    }

    /**
     * The createUrlAttachment operation.
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @param contents The contents parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> createUrlAttachment(long itemId, TodoUrlAttachment contents) {
        // Generated convenience method for createUrlAttachmentWithResponse
        RequestOptions requestOptions = new RequestOptions();
        CreateUrlAttachmentRequest requestObj = new CreateUrlAttachmentRequest(contents);
        BinaryData request = BinaryData.fromObject(requestObj);
        return createUrlAttachmentWithResponse(itemId, request, requestOptions).flatMap(FluxUtil::toMono);
    }

    /**
     * The createFileAttachment operation.
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @param contents Represent a byte array.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return A {@link Mono} that completes when a successful response is received.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Void> createFileAttachment(long itemId, ContentsFileDetails contents) {
        // Generated convenience method for createFileAttachmentWithResponse
        RequestOptions requestOptions = new RequestOptions();
        CreateFileAttachmentRequest requestObj = new CreateFileAttachmentRequest(contents);
        BinaryData request = new MultipartFormDataHelper(requestOptions)
            .serializeFileField("contents", requestObj.getContents().getContent(),
                requestObj.getContents().getContentType(), requestObj.getContents().getFilename())
            .end().getRequestBody();
        return createFileAttachmentWithResponse(itemId, request, requestOptions).flatMap(FluxUtil::toMono);
    }

    @Generated
    private static final TypeReference<List<BinaryData>> TYPE_REFERENCE_LIST_BINARY_DATA
        = new TypeReference<List<BinaryData>>() {
        };
}
