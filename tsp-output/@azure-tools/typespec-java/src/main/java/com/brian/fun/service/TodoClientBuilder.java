// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.brian.fun.service;

import com.brian.fun.service.implementation.TodoClientImpl;
import com.generic.core.annotation.Generated;
import com.generic.core.annotation.ServiceClientBuilder;
import com.generic.core.credential.KeyCredential;
import com.generic.core.http.pipeline.HttpPipeline;
import com.generic.core.http.pipeline.HttpPipelineBuilder;
import com.generic.core.http.pipeline.HttpPipelinePolicy;
import com.generic.core.http.policy.credential.KeyCredentialPolicy;
import java.util.ArrayList;
import java.util.List;

/**
 * A builder for creating a new instance of the TodoClient type.
 */
@ServiceClientBuilder(serviceClients = { UsersClient.class, TodoItemsClient.class, TodoItemsAttachmentsClient.class })
public final class TodoClientBuilder {
    @Generated
    private static final String SDK_NAME = "name";

    @Generated
    private static final String SDK_VERSION = "version";

    /**
     * Create an instance of the TodoClientBuilder.
     */
    @Generated
    public TodoClientBuilder() {
    }

    /*
     * The KeyCredential used for authentication.
     */
    @Generated
    private KeyCredential keyCredential;

    /**
     * {@inheritDoc}.
     */
    @Generated
    public TodoClientBuilder credential(KeyCredential keyCredential) {
        this.keyCredential = keyCredential;
        return this;
    }

    /*
     * Server parameter
     */
    @Generated
    private String endpoint;

    /**
     * Sets Server parameter.
     * 
     * @param endpoint the endpoint value.
     * @return the TodoClientBuilder.
     */
    @Generated
    public TodoClientBuilder endpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }

    /**
     * Builds an instance of TodoClientImpl with the provided parameters.
     * 
     * @return an instance of TodoClientImpl.
     */
    @Generated
    private TodoClientImpl buildInnerClient() {
        TodoClientImpl client = new TodoClientImpl(this.createHttpPipeline());
        return client;
    }

    @Generated
    private HttpPipeline createHttpPipeline() {
        HttpPipelineBuilder httpPipelineBuilder = new HttpPipelineBuilder();
        List<HttpPipelinePolicy> policies = new ArrayList<>();
        if (keyCredential != null) {
            policies.add(new KeyCredentialPolicy("authorization", keyCredential, "Bearer"));
        }
        httpPipelineBuilder.policies(policies.toArray(new HttpPipelinePolicy[0]));
        return httpPipelineBuilder.build();
    }

    /**
     * Builds an instance of UsersClient class.
     * 
     * @return an instance of UsersClient.
     */
    @Generated
    public UsersClient buildUsersClient() {
        return new UsersClient(buildInnerClient().getUsers());
    }

    /**
     * Builds an instance of TodoItemsClient class.
     * 
     * @return an instance of TodoItemsClient.
     */
    @Generated
    public TodoItemsClient buildTodoItemsClient() {
        return new TodoItemsClient(buildInnerClient().getTodoItems());
    }

    /**
     * Builds an instance of TodoItemsAttachmentsClient class.
     * 
     * @return an instance of TodoItemsAttachmentsClient.
     */
    @Generated
    public TodoItemsAttachmentsClient buildTodoItemsAttachmentsClient() {
        return new TodoItemsAttachmentsClient(buildInnerClient().getTodoItemsAttachments());
    }
}
