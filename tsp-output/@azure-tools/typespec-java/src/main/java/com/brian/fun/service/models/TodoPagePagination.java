// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.brian.fun.service.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.generic.core.annotation.Generated;
import com.generic.core.annotation.Immutable;

/**
 * The TodoPagePagination model.
 */
@Immutable
public final class TodoPagePagination {
    /*
     * The number of items returned in this page
     */
    @Generated
    @JsonProperty(value = "pageSize")
    private int pageSize;

    /*
     * The total number of items
     */
    @Generated
    @JsonProperty(value = "totalSize")
    private int totalSize;

    /*
     * A link to the previous page, if it exists
     */
    @Generated
    @JsonProperty(value = "prevLink")
    private String prevLink;

    /*
     * A link to the next page, if it exists
     */
    @Generated
    @JsonProperty(value = "nextLink")
    private String nextLink;

    /**
     * Creates an instance of TodoPagePagination class.
     * 
     * @param pageSize the pageSize value to set.
     * @param totalSize the totalSize value to set.
     */
    @Generated
    @JsonCreator
    private TodoPagePagination(@JsonProperty(value = "pageSize") int pageSize,
        @JsonProperty(value = "totalSize") int totalSize) {
        this.pageSize = pageSize;
        this.totalSize = totalSize;
    }

    /**
     * Get the pageSize property: The number of items returned in this page.
     * 
     * @return the pageSize value.
     */
    @Generated
    public int getPageSize() {
        return this.pageSize;
    }

    /**
     * Get the totalSize property: The total number of items.
     * 
     * @return the totalSize value.
     */
    @Generated
    public int getTotalSize() {
        return this.totalSize;
    }

    /**
     * Get the prevLink property: A link to the previous page, if it exists.
     * 
     * @return the prevLink value.
     */
    @Generated
    public String getPrevLink() {
        return this.prevLink;
    }

    /**
     * Get the nextLink property: A link to the next page, if it exists.
     * 
     * @return the nextLink value.
     */
    @Generated
    public String getNextLink() {
        return this.nextLink;
    }
}
