// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.brian.fun.service.implementation;

import com.generic.core.annotation.BodyParam;
import com.generic.core.annotation.ExpectedResponses;
import com.generic.core.annotation.Get;
import com.generic.core.annotation.HeaderParam;
import com.generic.core.annotation.Host;
import com.generic.core.annotation.HostParam;
import com.generic.core.annotation.PathParam;
import com.generic.core.annotation.Post;
import com.generic.core.annotation.ReturnType;
import com.generic.core.annotation.ServiceInterface;
import com.generic.core.annotation.ServiceMethod;
import com.generic.core.annotation.UnexpectedResponseExceptionType;
import com.generic.core.exception.ClientAuthenticationException;
import com.generic.core.exception.HttpResponseException;
import com.generic.core.exception.ResourceModifiedException;
import com.generic.core.http.Response;
import com.generic.core.http.RestProxy;
import com.generic.core.models.BinaryData;
import com.generic.core.models.Context;
import com.generic.core.models.RequestOptions;

/**
 * An instance of this class provides access to all the operations defined in TodoItemsAttachments.
 */
public final class TodoItemsAttachmentsImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final TodoItemsAttachmentsService service;

    /**
     * The service client containing this operation class.
     */
    private final TodoClientImpl client;

    /**
     * Initializes an instance of TodoItemsAttachmentsImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    TodoItemsAttachmentsImpl(TodoClientImpl client) {
        this.service = RestProxy.create(TodoItemsAttachmentsService.class, client.getHttpPipeline(),
            client.getSerializerAdapter());
        this.client = client;
    }

    /**
     * The interface defining all the services for TodoClientTodoItemsAttachments to be used by the proxy service to
     * perform REST calls.
     */
    @Host("{endpoint}")
    @ServiceInterface(name = "TodoClientTodoItemsA")
    public interface TodoItemsAttachmentsService {
        @Get("/items/{itemId}/attachments")
        @ExpectedResponses({ 200, 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<BinaryData> listSync(@HostParam("endpoint") String endpoint, @PathParam("itemId") long itemId,
            @HeaderParam("accept") String accept, RequestOptions requestOptions, Context context);

        @Post("/items/{itemId}/attachments")
        @ExpectedResponses({ 200, 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<Void> createUrlAttachmentSync(@HostParam("endpoint") String endpoint,
            @HeaderParam("content-type") String contentType, @PathParam("itemId") long itemId,
            @HeaderParam("accept") String accept, @BodyParam("application/json") BinaryData request,
            RequestOptions requestOptions, Context context);

        // @Multipart not supported by RestProxy
        @Post("/items/{itemId}/attachments")
        @ExpectedResponses({ 200, 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<Void> createFileAttachmentSync(@HostParam("endpoint") String endpoint,
            @HeaderParam("content-type") String contentType, @PathParam("itemId") long itemId,
            @HeaderParam("accept") String accept, @BodyParam("multipart/form-data") BinaryData request,
            RequestOptions requestOptions, Context context);
    }

    /**
     * The list operation.
     * <p>
     * <strong>Response Body Schema</strong>
     * </p>
     * <pre>{@code
     * [
     *     BinaryData (Required)
     * ]
     * }</pre>
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> listWithResponse(long itemId, RequestOptions requestOptions) {
        final String accept = "application/json";
        return service.listSync(this.client.getEndpoint(), itemId, accept, requestOptions, Context.NONE);
    }

    /**
     * The createUrlAttachment operation.
     * <p>
     * <strong>Request Body Schema</strong>
     * </p>
     * <pre>{@code
     * {
     *     contents (Required): {
     *         description: String (Required)
     *         url: String (Required)
     *     }
     * }
     * }</pre>
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @param request The request parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> createUrlAttachmentWithResponse(long itemId, BinaryData request,
        RequestOptions requestOptions) {
        final String contentType = "application/json";
        final String accept = "application/json";
        return service.createUrlAttachmentSync(this.client.getEndpoint(), contentType, itemId, accept, request,
            requestOptions, Context.NONE);
    }

    /**
     * The createFileAttachment operation.
     * 
     * @param itemId An integer that can be serialized to JSON (`−9007199254740991 (−(2^53 − 1))` to `9007199254740991
     * (2^53 − 1)` ).
     * @param request The request parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @return the response.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> createFileAttachmentWithResponse(long itemId, BinaryData request,
        RequestOptions requestOptions) {
        final String contentType = "multipart/form-data";
        final String accept = "application/json";
        return service.createFileAttachmentSync(this.client.getEndpoint(), contentType, itemId, accept, request,
            requestOptions, Context.NONE);
    }
}
